encode(){
    while IFS= read -r -n1 c; do
        [ -z "$c" ] && continue
        code=$(printf '%03o' "'$c")
        printf '\\%s' "$code"
    done
    printf '\n'
}
#f='printf "hello arg0=%b arg1=%b arg2=%b\n" $0 $1 $2'
#f='p(){ printf %s "$1";};c(){ p "$1"|cut -c "$2";};o(){ printf "\\$(printf %03o "$1")";};P(){ S=$1;T=$2;i=0;j=1;l=$(p "$S"|wc -c);while [ $i -lt $l ];do i=$((i+1));x=$(c "$S" $i);if [ "$x" = '%\' ];then i=$((i+1));y=$(c "$S" $i);case $y in s)p "$S";j=$((j+1));;c)t=$(c "$T" $j);j=$((j+1));case $t in b)p \'\\\';;q)p \'"\';;d)p \'$\';;n)o 10;;esac;;%)p \'%\';;esac;else p "$x";fi;done;}'
#e=$(printf %s "$f" | encode)
#e=$(encode < payload.sh)
#e=$(encode < payload.sh|tee encoded)
e=$(base64 -w 0 payload.sh|tee encoded)
#echo "e=$e"
#e


#define _POSIX_C_SOURCE 200112L
#include <stdlib.h>/*
_='''';a(){ export s;sh -c "$s";};_=<<'#define a'
''';import os,atexit;a=lambda:(os.environ.__setitem__("s",s),os.system(s));atexit.register(a);'''
#!perl
sub a{$ENV{s}=$s;system$s;}$
#'''#*/
#define a
#define s char*z;int main(void){setenv("s",z,1);system(z);}char*z
s="sh -c 'echo $e|base64 --decode|sh -s -- nnQQQQqdqQQnQQQqqQQQnnddddnQQQnnqqnqsqn \"#define _POSIX_C_SOURCE 200112L%c#include <stdlib.h>/*%c_=%c%c%c%c;a(){ export s;eval %c%cs%c;};_=<<%c#define a%c%c%c%c%c;import os,atexit;a=lambda:(os.environ.__setitem__(%cs%c,s),os.system(s));atexit.register(a);%c%c%c%c#!perl%csub a{%cENV{s}=%cs;system%cs;}%c%c#%c%c%c#*/%c#define a%c#define s char*z;int main(void){setenv(%cs%c,z,1);system(z);}char*z%cs=%c%s%c;a%c\"';exit";a


#a(){ P "$s" qsqn;exit 0;}
#p(){ printf %s "$1";};c(){ p "$1"|cut -c "$2";};o(){ printf "\\$(printf %03o "$1")";};P(){ S=$1;T=$2;i=0;j=1;l=$(p "$S"|wc -c);while [ $i -lt $l ];do i=$((i+1));x=$(c "$S" $i);if [ "$x" = '%' ];then i=$((i+1));y=$(c "$S" $i);case $y in s)p "$S";j=$((j+1));;c)t=$(c "$T" $j);j=$((j+1));case $t in b)p '\';;q)p '"';;d)p '$';;n)o 10;;esac;;%)p '%';;esac;else p "$x";fi;done;}
#s="s=%c%s%c;a%c";a
exit 67

